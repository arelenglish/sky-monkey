exit
post :create, {customer: valid_attributes}
valid_attributes
exit
BoardingPass.count
post :create, {boarding_pass: valid_attributes}
BoardingPass.count
exit
_[:boarding_pass]
post :create, {boarding_pass: valid_attributes}
valid_attributes
exit
valid_attributes
post :create, {boarding_pass: {valid_attributes}}
post :create, {b: valid_attributes}
post :create, {valid_attributes}
post :create, {boarding_pass: valid_attributes}
post: :create, {boarding_pass: valid_attributes}
exit
boarding_pass
exit
Rate.todays_tax_rate
Rate.last
Rate.all
exit
Rate.all
exit
n
Rate.all
exit
rate.save!
rate.save
rate
rate = Rate.create({tax_rate: 12.53, active_date: Date.today})
Rate.all
Rate.last
exit
rate = Rate.new({tax_rate: 12.53, active_date: Date.today})
Rate.all
exit
render :confirmationexit
render :confirmation
exit
BoardingPass.where(customer_id:session[:boarding_pass]['customer_id']).last
    ).last
      customer_id:session[:boarding_pass]['customer_id']
BoardingPass.where(
session[:boarding_pass]['customer_id']
session[:boarding_pass]
sessionsession[:boarding_pass]
@boarding_pass
exit
q
e
next
exit
BoardingPass.where(id: 1000).last
BoardingPass.where(id: 1000)
@boarding_pass.last.id
@boarding_pass.last
@boarding_pass
exit
false || false
false || true
true || false
expiration.blank? || Date.new(expiration.to_i) < Date.today.beginning_of_month
(Date.new(expiration.to_i) < Date.today.beginning_of_month)
 Date.today.beginning_of_month
Date.new(expiration.to_i)
Date.new(expiration.to_i
 Date.today.beginning_of_month >= 
expiration
(Date.new(expiration.to_i) <= Date.today.beginning_of_month)
expiration.blank?
exit
Date.new(expiration.to_i) >= Date.today.beginning_of_month
expiration
exit
Date.new(expiration.to_i) >= Date.today.beginning_of_monthexit
Date.new(expiration.to_i) >= Date.today
Date.new(expiration.to_i) >= Date.today.beginning_of_month
Date.new(expiration.to_i) > Date.today.beginning_of_month
Date.new(expiration.to_i) > Date.today
Date.new(expiration.to_i) <= Date.today
Date.new(expiration.to_i) <= Date.today.beginning_of_month
Date.new(expiration.to_i) < Date.today.beginning_of_m
Date.today.beginning_of_month
Date.new(expiration.to_i)
Date.new(expiration)
expiration.to_date
expiration
exit
session[:credit_card].except("errors")
session[:credit_card]
Customer.new(session[:customer])
session[:customer]
exit
@boarding_pass
session[:boarding_pass]
sessionsession[:boarding_pass]
exit
@cc_info.valid?
@cc_info
pps_params
@cc_info.errors.any?exit
@cc_info.class
@cc_info.errors.any?
@cc_info
exit
rate_params
exit
params
params[:payment_processor_simulator]["expiration(1i)"]
params[:payment_processor_simulator]["expiration(1i)]
params[:payment_processor_simulator][:expiration]
params[:payment_processor_simulator]
params["expiration(2i)"]
params["expiration"]
params[:expiration]
params
expiration
exit
rate_params
